<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BooksMart</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/style.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap');
    </style>
</head>

<body>
    <!-- Your existing HTML content here -->
    <nav id="mainNavbar" class="navbar navbar-dark navbar-expand-md py-0 fixed-top">
        <a href="#" class="navbar-brand"><img src="/img/logoGlasses.svg" alt="" id="glassesSVG"
                class="mt-0 mb-2 ml-1"></a>
        <button class="navbar-toggler" data-toggle="collapse" data-target="#navLinks">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navLinks">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a href="/home" class="nav-link">INICIO</a>
                </li>
                <li class="nav-item">
                    <a href="/trades" class="nav-link">INTERCAMBIAR</a>
                </li>
                <li class="nav-item">
                    <a href="/faq" class="nav-link">ACERCA DE</a>
                </li>
            </ul>
            <div class="navbar-nav ml-auto">
                <a class="nav-link" href="#">LOG IN</a>
            </div>

        </div>
    </nav>

    <h1>Make trade offer</h1>

    <section class="container-fluid px-5">
        <div class="row align-items-center">
            <form action="/trades" method="POST" class=" mb-3">
                <!-- Your existing form inputs here -->
                <div class="input-group">
                    <span class="input-group-text text-white" style="background-color: #24242c">Nombre</span>
                    <input type="text" name="usuario" id="usuario" placeholder="Nombre de usuario"
                        class="form-control text-white" style="background-color: #24242c" autocomplete="off">
                    <span class="input-group-text text-white" style="background-color: #24242c">Forma de
                        intercambio</span>
                    <div class="input-group form-control" style="background-color: #24242c">
                        <select class="form-select text-white" id="metodo_intercambio" name="metodo_intercambio"
                            style="background-color: #24242c">

                            <option selected value="En persona">En persona</option>
                            <option value="Por correo">Por Correo</option>
                            <option value="Otro">Otro</option>
                        </select>
                    </div>

                </div>

                <!-- List of books you have -->
                <h2 class="text-white">Libros que tienes</h2>
                <div id="tiene_libros">
                    <!-- This is where the dynamic input fields will be added -->
                </div>
                <button class="btn btn-primary" type="button" id="add_tengo">Agregar</button>


                <!-- List of books you want -->
                <h2 class="text-white">Libros que buscas</h2>
                <div id="quiere_libros">
                    <!-- This is where the dynamic input fields will be added -->
                </div>
                <button class="btn btn-primary" type="button" id="add_quiero">Agregar</button>



                <!-- Display confirmed books -->
                <h2 class="text-white">Confirmed Books</h2>
                <table id="confirmed_books_table" class="table">
                    <thead>
                        <tr>
                            <th class="text-white table-dark">Libros que tienes</th>
                            <th class="text-white table-dark">Libros que buscas</th>
                        </tr>
                    </thead>
                    <tbody id="confirmed_books_tbody">
                        <!-- Confirmed books will be displayed here -->
                    </tbody>
                </table>

                <br>
                <button class="btn btn-primary" type="submit" id="submit_button">Submit</button>
            </form>
        </div>
    </section>

    <script>
        let bookCounterQuiero = 0;
        let bookCounterTengo = 0;
        const confirmedBooksTengo = [];
        const confirmedBooksQuiero = [];

        document.getElementById('add_quiero').addEventListener('click', function () {
            bookCounterQuiero++;
            const quiereLibros = document.getElementById('quiere_libros');
            const newBook = `
    <div class="input-group mb-3"> <!-- Added the Bootstrap input-group class -->
        <span class="input-group-text text-white" style="background-color: #24242c">Nombre</span>
        <input type="text" name="quiere_libros[${bookCounterQuiero}][nombre]" placeholder="Nombre del libro" autocomplete="off" class="form-control text-white" style="background-color: #24242c">
        <span class="input-group-text text-white" style="background-color: #24242c">Autor</span>
        <input type="text" name="quiere_libros[${bookCounterQuiero}][autor]" placeholder="Autor del libro" autocomplete="off" class="form-control text-white" style="background-color: #24242c">
        <span class="input-group-text text-white" style="background-color: #24242c">Fecha de Publicaci贸n</span>
        <input type="text" name="quiere_libros[${bookCounterQuiero}][fecha_publicacion]" placeholder="Fecha de Publicaci贸n" autocomplete="off" class="form-control text-white" style="background-color: #24242c">
        <button type="button" class="confirm-button btn btn-primary" data-type="quiere_libros" data-index="${bookCounterQuiero}">Confirm</button> 
    </div>
    `;
            quiereLibros.insertAdjacentHTML('beforeend', newBook);
        });

        document.getElementById('add_tengo').addEventListener('click', function () {
            bookCounterTengo++;
            const tieneLibros = document.getElementById('tiene_libros');
            const newBook = `
    <div class="input-group mb-3"> <!-- Added the Bootstrap input-group class -->
        <span class="input-group-text text-white" style="background-color: #24242c">Nombre</span>
        <input type="text" name="tiene_libros[${bookCounterTengo}][nombre]" placeholder="Nombre del libro" autocomplete="off" class="form-control text-white" style="background-color: #24242c">
        <span class="input-group-text text-white" style="background-color: #24242c">Autor</span>
        <input type="text" name="tiene_libros[${bookCounterTengo}][autor]" placeholder="Autor del libro" autocomplete="off" class="form-control text-white" style="background-color: #24242c">
        <span class="input-group-text text-white" style="background-color: #24242c">Fecha de Publicaci贸n</span>
        <input type="text" name="tiene_libros[${bookCounterTengo}][fecha_publicacion]" placeholder="Fecha de Publicaci贸n" autocomplete="off" class="form-control text-white" style="background-color: #24242c">
        <button type="button" class="confirm-button btn btn-primary" data-type="tiene_libros" data-index="${bookCounterTengo}">Confirm</button>
    </div>
    `;
            tieneLibros.insertAdjacentHTML('beforeend', newBook);
        });


        // Event listener for confirming books
        document.addEventListener('click', function (event) {
            if (event.target.classList.contains('confirm-button')) {
                const type = event.target.getAttribute('data-type');
                const index = event.target.getAttribute('data-index');
                const bookInputs = document.querySelectorAll(
                    `[name="${type}[${index}][nombre]"], [name="${type}[${index}][autor]"], [name="${type}[${index}][fecha_publicacion]"]`
                );
                const book = {};

                bookInputs.forEach(input => {
                    const key = input.getAttribute('name').split('[')[2].split(']')[
                        0]; // Adjusted index
                    const value = input.value;
                    book[key] = value;
                });


                if (type === 'quiere_libros') {
                    confirmedBooksQuiero.push(book);
                } else if (type === 'tiene_libros') {
                    confirmedBooksTengo.push(book);
                }

                updateConfirmedBooksTable();
                removeBookFields(type, index);
            }
        });

        // Function to update the confirmed books table
        function updateConfirmedBooksTable() {
            const confirmedBooksTable = document.getElementById('confirmed_books_tbody');
            confirmedBooksTable.innerHTML = '';

            const maxLength = Math.max(confirmedBooksQuiero.length, confirmedBooksTengo.length);

            for (let i = 0; i < maxLength; i++) {
                const row = document.createElement('tr');

                const cellTengo = document.createElement('td');
                if (i < confirmedBooksTengo.length) {
                    cellTengo.textContent =
                        `${confirmedBooksTengo[i].nombre} - ${confirmedBooksTengo[i].autor} (${confirmedBooksTengo[i].fecha_publicacion})`;
                    cellTengo.classList.add('text-white', 'table-dark'); // Added text-white class here
                }
                row.appendChild(cellTengo);

                const cellQuiero = document.createElement('td');
                if (i < confirmedBooksQuiero.length) {
                    cellQuiero.textContent =
                        ` ${confirmedBooksQuiero[i].nombre} - ${confirmedBooksQuiero[i].autor} (${confirmedBooksQuiero[i].fecha_publicacion})`;
                    cellQuiero.classList.add('text-white', 'table-dark'); // Added text-white class here
                    cellTengo.classList.add('text-white', 'table-dark');
                }
                row.appendChild(cellQuiero);

                cellQuiero.classList.add('text-white', 'table-dark'); // Added text-white class here
                cellTengo.classList.add('text-white', 'table-dark');

                confirmedBooksTable.appendChild(row);
            }
        }

        // Function to remove book fields after confirmation
        function removeBookFields(type, index) {
            const container = document.getElementById(type);
            const bookFields = container.querySelectorAll(`[data-index="${index}"]`);
            bookFields.forEach(field => field.remove());
        }
    </script>
</body>

</html>